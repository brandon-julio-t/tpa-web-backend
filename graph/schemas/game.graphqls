type Game {
    id: ID!
    createdAt: Time!
    title: String!
    description: String!
    price: Float!
    banner: AssetFile!
    slideshows: [GameSlideshow!]!
    tags: [GameTag!]!
    systemRequirements: String!
}

type GameSlideshow {
    game: Game!
    file: AssetFile!
}

type GamePagination {
    data: [Game!]!
    totalPages: Int!
}

extend type Query {
    games(page: Int!): GamePagination!
    getGameById(id: ID!): Game!
}

extend type Mutation {
    createGame(input: CreateGame!): Game!
    updateGame(input: UpdateGame!): Game!
    deleteGame(id: ID!): Game!
}

input CreateGame {
    title: String!
    description: String!
    price: Float!
    banner: Upload!
    slideshows: [Upload!]!
    gameTags: [ID!]!
    systemRequirements: String!
}

input UpdateGame {
    id: ID!
    title: String!
    description: String!
    price: Float!
    banner: Upload
    slideshows: [Upload]
    gameTags: [ID!]!
    systemRequirements: String!
}
